import React from "react";
import { Dialog, DialogContent } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { User, ExternalLink } from "lucide-react";
import { motion } from "framer-motion";

export default function UserPreviewModal({ user, open, onOpenChange }) {
  if (!user) return null;

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-md p-0 bg-transparent border-none overflow-hidden max-h-[85vh]">
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.2 }}
          className="relative w-full h-[650px] rounded-2xl overflow-hidden shadow-2xl"
        >
          {/* Profile Photo as Full Background */}
          <div 
            className="absolute inset-0 bg-cover bg-center"
            style={{ 
              backgroundImage: `url(${user.avatar_url})`,
              backgroundSize: 'cover',
              backgroundPosition: 'center'
            }}
          />
          
          {/* Gradient Overlay */}
          <div className="absolute inset-0 bg-gradient-to-b from-transparent via-black/20 to-black/75" />

          {/* Content Overlay */}
          <div className="absolute inset-0 flex flex-col justify-between p-6 text-white">
            {/* Top Section */}
            <div className="text-center">
              <p className="text-sm font-medium opacity-90 bg-black/20 backdrop-blur-sm rounded-full px-4 py-2 inline-block">
                Populaire accounts ontdekken
              </p>
            </div>

            {/* Bottom Content */}
            <div className="space-y-4">
              {/* User Name */}
              <div className="text-center">
                <h2 className="text-3xl font-bold mb-2 drop-shadow-lg">
                  {user.display_name}
                </h2>
                {user.bio && (
                  <p className="text-sm opacity-90 leading-relaxed max-w-xs mx-auto">
                    {user.bio}
                  </p>
                )}
              </div>

              {/* Stats */}
              <div className="bg-black/40 backdrop-blur-md rounded-2xl p-4 border border-white/10">
                <div className="flex justify-between items-center mb-4">
                  <div className="text-center flex-1">
                    <div className="text-2xl font-bold">{user.post_count || 0}</div>
                    <div className="text-xs opacity-80 uppercase tracking-wide">Posts</div>
                  </div>
                  <div className="w-px h-8 bg-white/20"></div>
                  <div className="text-center flex-1">
                    <div className="text-2xl font-bold">
                      {user.follower_count > 1000 
                        ? `${(user.follower_count / 1000).toFixed(1)}K` 
                        : user.follower_count || 0}
                    </div>
                    <div className="text-xs opacity-80 uppercase tracking-wide">Followers</div>
                  </div>
                  <div className="w-px h-8 bg-white/20"></div>
                  <div className="text-center flex-1">
                    <div className="text-2xl font-bold">{user.following_count || 0}</div>
                    <div className="text-xs opacity-80 uppercase tracking-wide">Following</div>
                  </div>
                </div>

                {/* Portfolio Preview */}
                <div className="flex justify-center gap-2 mb-5">
                  {user.portfolio_images?.slice(0, 4).map((image, index) => (
                    <div 
                      key={index}
                      className="w-14 h-14 rounded-xl overflow-hidden bg-white/10 border border-white/20"
                    >
                      <img 
                        src={image} 
                        alt={`Portfolio ${index + 1}`}
                        className="w-full h-full object-cover"
                      />
                    </div>
                  ))}
                  {user.portfolio_images?.length > 4 && (
                    <div className="w-14 h-14 rounded-xl bg-white/10 border border-white/20 flex items-center justify-center">
                      <span className="text-xs font-medium">+{user.portfolio_images.length - 4}</span>
                    </div>
                  )}
                </div>

                {/* Action Buttons */}
                <div className="space-y-3">
                  <Button className="w-full bg-white text-black font-bold py-3 hover:bg-gray-100 transition-colors rounded-xl text-base shadow-lg">
                    VOLGEN
                  </Button>
                  <Button 
                    variant="outline" 
                    className="w-full border-white/30 text-white hover:bg-white/10 font-medium py-3 rounded-xl text-sm backdrop-blur-sm"
                  >
                    <User className="w-4 h-4 mr-2" />
                    Volledig account bekijken
                  </Button>
                </div>
              </div>
            </div>
          </div>

          {/* Close button */}
          <button
            onClick={() => onOpenChange(false)}
            className="absolute top-4 right-4 w-8 h-8 rounded-full bg-black/40 backdrop-blur-sm border border-white/20 flex items-center justify-center text-white hover:bg-black/60 transition-colors"
          >
            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </motion.div>
      </DialogContent>
    </Dialog>
  );
}